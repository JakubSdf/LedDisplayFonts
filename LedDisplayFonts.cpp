#include "LedDisplayFonts.h"

// Constructor
LedDisplayFonts::LedDisplayFonts(DMD &dmd) : _dmd(dmd) {}

// Font data for numbers 0-9 and colon
const byte LedDisplayFonts::font[11][16] = {
  { // 0
    0b000000,
    0b011110,
    0b100001,
    0b100001,
    0b100001,
    0b100001,
    0b100001,
    0b100001,
    0b100001,
    0b100001,
    0b100001,
    0b100001,
    0b100001,
    0b100001,
    0b100001,
    0b011110
  },
  { // 1
    0b000000,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
  },
  { // 2
    0b000000,
    0b111110,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
    0b011110,
    0b100000,
    0b100000,
    0b100000,
    0b100000,
    0b100000,
    0b100000,
    0b011111
  },
  { // 3
    0b000000,
    0b111110,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
    0b111110,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
    0b111110
  },
  { // 4
    0b000000,
    0b100001,
    0b100001,
    0b100001,
    0b100001,
    0b100001,
    0b100001,
    0b100001,
    0b011110,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
    0b000001
  },
  { // 5
    0b000000,
    0b011111,
    0b100000,
    0b100000,
    0b100000,
    0b100000,
    0b100000,
    0b100000,
    0b011110,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
    0b111110
  },
  { // 6
    0b000000,
    0b011111,
    0b100000,
    0b100000,
    0b100000,
    0b100000,
    0b100000,
    0b100000,
    0b011110,
    0b100001,
    0b100001,
    0b100001,
    0b100001,
    0b100001,
    0b100001,
    0b011110
  },
  { // 7
    0b000000,
    0b111110,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
    0b000001
  },
  { // 8
    0b000000,
    0b011110,
    0b100001,
    0b100001,
    0b100001,
    0b100001,
    0b100001,
    0b100001,
    0b011110,
    0b100001,
    0b100001,
    0b100001,
    0b100001,
    0b100001,
    0b100001,
    0b011110
  },
  { // 9
    0b000000,
    0b011110,
    0b100001,
    0b100001,
    0b100001,
    0b100001,
    0b100001,
    0b100001,
    0b011110,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
    0b000001,
    0b111110
  },
  { // :
    0b000000,
    0b000000,
    0b000000,
    0b000000,
    0b000000,
    0b000000,
    0b000000,
    0b001000,
    0b000000,
    0b001000,
    0b000000,
    0b000000,
    0b000000,
    0b000000,
    0b000000,
    0b000000
  }
};

// Function to draw a character
void LedDisplayFonts::drawChar(int x, int y, char c) {
  int index = -1;

  // Map characters to font indices
  if (c >= '0' && c <= '9') {
    index = c - '0';
  } else if (c == ':') {
    index = 10; // Colon is the 11th entry in the font array
  }

  if (index != -1) {
    for (int row = 0; row < 16; row++) {
      for (int col = 0; col < 6; col++) {
        if (font[index][row] & (1 << (5 - col))) {
          _dmd.writePixel(x + col, y + row, GRAPHICS_NORMAL, true);
        }
      }
    }
  }
}